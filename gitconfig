[user]
  name = Jochen Lillich
  email = jochen@lillich.info
[alias]
  # Abbreviations
  co = checkout
  cp = cherry-pick
  st = status -s
  cl = clone
  ci = commit
  co = checkout
  br = branch
  #
  # Branches
  #
  ours = "!f() { git co --ours $@ && git add $@; }; f"
  theirs = "!f() { git co --theirs $@ && git add $@; }; f"
  # Track remote branch
  track = checkout -t
  # Create new tracking branch
  ntb = "!f(){ git checkout -b \"$1\" && git push -u; }; f"
  # Delete branch on origin and locally
  nuke-branch = "!f(){ git push origin :$1 && git branch -d $1;  }; f"
  # Get current branch
  current-branch = !git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||'
  # Rebase master on current branch
  rebase-upstream = "!f(){ git fetch origin && git rebase -i origin/master; }; f"
  #
  # Reset
  #
  r = reset
  r1 = reset HEAD^
  r2 = reset HEAD^^
  rh = reset --hard
  rh1 = reset HEAD^ --hard
  rh2 = reset HEAD^^ --hard
  # Misc
  diff = diff --word-diff
  dc = diff --cached
  sl = stash list
  sa = stash apply
  ss = stash save
  ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
  ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
  lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
  lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
  ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
  le = log --oneline --decorate
  filelog = log -u
  fl = log -u
  dl = "!git ll -1"
  dlc = diff --cached HEAD^
  dr  = "!f() { git diff "$1"^.."$1"; }; f"
  lc  = "!f() { git ll "$1"^.."$1"; }; f"
  diffr  = "!f() { git diff "$1"^.."$1"; }; f"
  grep = grep -Ii
  gr = grep -Ii
  unstage = reset HEAD --
  staged = diff --cached
  assume = update-index --assume-unchanged
  assumeall = "!git st -s | awk {'print $2'} | xargs git assume"
  unassume = update-index --no-assume-unchanged
  unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
  assumed = "!git ls-files -v | grep ^h | cut -c 3-"
  lasttag = describe --tags --abbrev=0
  lt = describe --tags --abbrev=0
[apply]
  whitespace = warn
[merge]
  tool = /Users/geewiz/bin/git-merge-cmd
[core]
  excludesfile = /Users/geewiz/.gitignore
  editor = vim
[color]
  diff = auto
  status = auto
  branch = auto
  ui = always
[help]
  autocorrect = 1
[status]
  submodule = 1
[push]
  # Only push branches that have been set up to track a remote branch.
  default = current
[mergetool]
  keepBackup = true
[github]
  user = geewiz
[difftool "sourcetree"]
  cmd = opendiff \"$LOCAL\" \"$REMOTE\"
  path = 
[mergetool "sourcetree"]
  cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
  trustExitCode = true
[commit]
  template = ~/.gitcommittemplate
